---
MediaStore:
- Container:
    Properties:
      AccessLoggingEnabled: Boolean
      ContainerName: String
      CorsPolicy:
      - CorsRule
      LifecyclePolicy: String
      Policy: String
    Type: AWS::MediaStore::Container
  MetaData:
    description: 'The AWS::MediaStore::Container resource specifies a storage container
      to hold objects. A container is similar to a bucket in Amazon S3. '
    name: AWS::MediaStore::Container
    properties:
    - AccessLoggingEnabled: 'The state of access logging on the container. This value
        is false by default, indicating that AWS Elemental MediaStore does not send
        access logs to

        Amazon CloudWatch Logs. When you enable access logging on the container, MediaStore

        changes this value to true, indicating that the service delivers access logs
        for objects stored in that container

        to CloudWatch Logs.

        Required: No

        Type: Boolean

        Update requires: No interruption'
    - ContainerName: "The name for the container. The name must be from 1 to 255 characters.
        Container\nnames must be unique to your AWS account within a specific region.
        As an example,\nyou could\ncreate a container named movies in every region,
        as long as you don√¢\x80\x99t have an\nexisting container with that name.\nRequired:
        Yes\nType: String\nMinimum: 1\nMaximum: 255\nPattern: [\\w-]+\nUpdate requires:
        Replacement"
    - CorsPolicy: 'Sets the cross-origin resource sharing (CORS) configuration on
        a container so that

        the container can service cross-origin requests. For example, you might want
        to enable

        a

        request whose origin is http://www.example.com to access your AWS Elemental
        MediaStore

        container at my.example.container.com by using the browser''s XMLHttpRequest

        capability.

        To enable CORS on a container, you attach a CORS policy to the container.
        In the CORS

        policy, you configure rules that identify origins and the HTTP methods that
        can be

        executed

        on your container. The policy can contain up to 398,000 characters. You can
        add up

        to 100

        rules to a CORS policy. If more than one rule applies, the service uses the
        first

        applicable rule listed.

        To learn more about CORS, see Cross-Origin Resource Sharing (CORS) in AWS
        Elemental MediaStore.

        Required: No

        Type: List of CorsRule

        Update requires: No interruption'
    - LifecyclePolicy: 'Writes an object lifecycle policy to a container. If the container
        already has an

        object lifecycle policy, the service replaces the existing policy with the
        new policy.

        It takes up to 20 minutes for the change to take effect.

        For information about how to construct an object lifecycle policy, see Components
        of an Object Lifecycle Policy.

        Required: No

        Type: String

        Update requires: No interruption'
    - Policy: 'Creates an access policy for the specified container to restrict the
        users and

        clients that can access it. For information about the data that is included
        in an

        access

        policy, see the AWS Identity and

        Access Management User Guide.

        For this release of the REST API, you can create only one policy for a container.

        If

        you enter PutContainerPolicy twice, the second command modifies the existing

        policy.

        Required: No

        Type: String

        Update requires: No interruption'
    url: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediastore-container.html
...
